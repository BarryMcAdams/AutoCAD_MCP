[project]
name = "autocad-mcp"
version = "0.1.0"
description = "A Model Context Protocol (MCP) server for AutoCAD 2025"
authors = [
    {name = "AutoCAD MCP Contributors"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
keywords = ["autocad", "mcp", "3d", "cad", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
flask = "^3.0.3"
pyautocad = {version = "^0.2.0", platform = "win32"}
numpy = "^2.1.0"
scipy = "^1.14.1"
pypiwin32 = {version = "^223", platform = "win32"}
fastapi = "^0.116.1"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
python-multipart = "^0.0.20"
mcp = "^1.0.0"
websockets = "^12.0"
aiofiles = "^23.2.0"
jinja2 = "^3.1.2"
requests = "^2.31.0"
python-dotenv = "^1.0.0"
cryptography = "^41.0.0"

[tool.poetry.group.ml]
optional = true

[tool.poetry.group.ml.dependencies]
scikit-learn = "^1.4.0"
transformers = "^4.35.0"
torch = "^2.1.0"
accelerate = "^0.24.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^4.0"
pytest-html = "^4.0.0"
pytest-mock = "^3.12.0"
black = "^24.8.0"
ruff = "^0.5.5"
mypy = "^1.0"
bandit = "^1.7"
safety = "^2.0"
pywin32-stubs = {version = "^1.0.7", platform = "win32"}
types-requests = "^2.32.4.20250809"
types-psutil = "^7.0.0.20250801"
types-pyyaml = "^6.0.12.20250809"
types-redis = "^4.6.0.20241004"
scipy-stubs = "^1.16.1.0"
types-jinja2 = "^2.11.9"

[tool.pytest.ini_options]
pythonpath = [".", "tests"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    DELETED
    | migration_backup
    | \.git
)/
'''

# Ruff configuration
[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "S", "B", "A", "C4", "T10", "T20"]
ignore = ["S101"]  # Allow assert statements in tests

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S106"]  # Allow hardcoded passwords in tests

# MyPy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = ["DELETED/", "migration_backup/"]

[[tool.mypy.overrides]]
module = "pyautocad.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "win32com.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pythoncom"
ignore_missing_imports = true

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "DELETED", "migration_backup"]
skips = ["B101"]  # Skip assert_used test

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
