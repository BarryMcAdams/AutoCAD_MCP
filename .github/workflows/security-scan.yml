name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety semgrep mypy
        pip install -r requirements-prod.txt
        
    - name: Run Bandit security scan
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ -f txt
        
    - name: Run Safety dependency scan
      run: |
        safety check --json --output safety-report.json || true
        safety check
        
    - name: Run Semgrep scan
      run: |
        semgrep --config=auto --json --output=semgrep-report.json src/ || true
        semgrep --config=auto src/
        
    - name: Run MyPy type checking
      run: |
        mypy src/ --ignore-missing-imports --show-error-codes || true
        
    - name: Run comprehensive security scan
      run: |
        python -m src.security.security_scanner . --format json --output comprehensive-scan.json
        python -m src.security.security_scanner . --format text
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json  
          semgrep-report.json
          comprehensive-scan.json
          
    - name: Comment PR with security summary
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          
          let summary = '## üîí Security Scan Summary\n\n';
          
          // Read comprehensive scan results
          try {
            const scanData = JSON.parse(fs.readFileSync('comprehensive-scan.json', 'utf8'));
            const totalFindings = scanData.summary.total_findings;
            const severityBreakdown = scanData.summary.severity_breakdown;
            
            summary += `**Total Findings:** ${totalFindings}\n\n`;
            summary += '**Severity Breakdown:**\n';
            
            for (const [severity, count] of Object.entries(severityBreakdown)) {
              if (count > 0) {
                const icon = severity === 'critical' ? 'üî¥' : 
                           severity === 'high' ? 'üü†' : 
                           severity === 'medium' ? 'üü°' : 'üü¢';
                summary += `- ${icon} ${severity.toUpperCase()}: ${count}\n`;
              }
            }
            
            if (totalFindings === 0) {
              summary += '\n‚úÖ **No security issues found!**';
            } else if (severityBreakdown.critical > 0 || severityBreakdown.high > 0) {
              summary += '\n‚ö†Ô∏è **Critical or high severity issues found. Please review.**';
            }
            
          } catch (error) {
            summary += '‚ùå Could not parse security scan results';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });
          
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: high
        
  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2